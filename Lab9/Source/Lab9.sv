
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Lab9(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SDRAM //////////
	output		    [12:0]		DRAM_ADDR,
	output		     [1:0]		DRAM_BA,
	output		          		DRAM_CAS_N,
	output		          		DRAM_CKE,
	output		          		DRAM_CLK,
	output		          		DRAM_CS_N,
	inout 		    [15:0]		DRAM_DQ,
	output		          		DRAM_LDQM,
	output		          		DRAM_RAS_N,
	output		          		DRAM_UDQM,
	output		          		DRAM_WE_N,

	//////////// VGA //////////
	output		          		VGA_BLANK_N,
	output		     [7:0]		VGA_B,
	output		          		VGA_CLK,
	output		     [7:0]		VGA_G,
	output		          		VGA_HS,
	output		     [7:0]		VGA_R,
	output		          		VGA_SYNC_N,
	output		          		VGA_VS
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

logic reset_n, visible_region,locked,ext_reset_n;
logic [15:0] line_value, pixel_location ;
assign reset_n = KEY[0];
logic [31:0] fifo_out ;

//assign fifo_out = visible_region?{8'b0,VGA_R,VGA_G,VGA_B}:32'b0;
assign VGA_R = visible_region? fifo_out[23:16]:8'b0;
assign VGA_G = visible_region? fifo_out[15:8]:8'b0;
assign VGA_B = visible_region? fifo_out[7:0]:8'b0;

//=======================================================
//  Structural coding
//=======================================================
VTC U0(.VGA_CLK(VGA_CLK),.reset_n(reset_n),.VGA_HS(VGA_HS),.VGA_VS(VGA_VS),.line_value(line_value),.pixel_location(pixel_location),.visible_region(visible_region),.VGA_BLANK_N(VGA_BLANK_N),.VGA_SYNC_N(VGA_SYNC_N));
video_pll U1 (.refclk(CLOCK_50),.rst(1'b0),.outclk_0(VGA_CLK),.locked);
//Pixel_G U3(.VGA_CLK,.reset_n,.line_value,.pixel_location,.visible_region,.VGA_R(fifo_out[23:16]),.VGA_G(fifo_out[15:8]),.VGA_B(fifo_out[7:0]));


SDRAM  U2(
	.clk_clk(CLOCK_50),
	.piexl_out_clk(VGA_CLK),
	.pll_0_outclk1_phase_shift_clk(DRAM_CLK),
	.sdram_out_addr(DRAM_ADDR),
	.sdram_out_ba(DRAM_BA),
	.sdram_out_cas_n(DRAM_CAS_N),
	.sdram_out_cke(DRAM_CKE),
	.sdram_out_cs_n(DRAM_CS_N),
	.sdram_out_dq(DRAM_DQ),
	.sdram_out_dqm({DRAM_UDQM,DRAM_LDQM}),
	.sdram_out_ras_n(DRAM_RAS_N),
	.sdram_out_we_n(DRAM_WE_N),
	.fifo_0_out_valid(LEDR[0]),
	.fifo_0_out_data(fifo_out),
	.fifo_0_out_ready(visible_region),
	.pll_0_locked_export(),
	.fifo_0_reset_out_reset_n(KEY[0]),
	.dma_0_irq_irq(LEDR[9]));	



endmodule
